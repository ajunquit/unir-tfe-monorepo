name: ci-default

on:
  push:
    branches: [ "master" ] 

permissions:
  contents: read
  packages: read

env:
  DOTNET_VERSION: '8.x'
  AZURE_WEBAPP_NAME: 'webapp-tfe-unir-monorepo'  # <-- tu App Service real

jobs:
  build_test_publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore
        run: |
          dotnet restore \
            --source "https://api.nuget.org/v3/index.json" \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity normal

      # TIP: si tu .sln está en la raíz, especifica el proyecto web para evitar publicar otros.
      # ej: dotnet publish src/UNIR.TFE.Monorepo.WebApp -c Release -o ${{ github.workspace }}/publish
      - name: Publish
        run: dotnet publish -c Release -o ${{ github.workspace }}/publish

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: net-app
          path: ${{ github.workspace }}/publish
          if-no-files-found: error

  deploy_azure:
    needs: build_test_publish
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: net-app
          path: ./deploy   # bajamos el folder publicado aquí

      - name: Azure Login (Service Principal secret)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Despliegue a Azure App Service (Linux) usando folder (la acción zipea internamente)
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ./deploy
          # slot-name: "staging"  # <-- descomenta si quieres desplegar al slot
