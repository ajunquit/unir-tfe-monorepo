name: CI · Restore · Build · Test · Publish to Azure DevOps

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  # Ajusta estas rutas si tu solución/proyectos tienen otros nombres
  SOLUTION_PATH: 'UNIR.TFE.Monorepo.sln'
  TEST_PROJECT: 'test/UNIR.TFE.Monorepo.WebApp.Test/UNIR.TFE.Monorepo.WebApp.Test.csproj'
  PUBLISH_PROJECT: 'src/UNIR.TFE.Monorepo.WebApp/UNIR.TFE.Monorepo.WebApp.csproj'
  ARTIFACT_NAME: 'webapp'
  ARTIFACT_DIR: 'artifacts/publish'
  PACKAGE_NAME: 'unir-tfe-webapp'

jobs:
  build_test_publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache NuGet
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', 'global.json', 'nuget.config') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore
      run: dotnet restore ${{ env.SOLUTION_PATH }}

    - name: Build (Release)
      run: dotnet build ${{ env.SOLUTION_PATH }} -c Release --no-restore

    - name: Test (con cobertura)
      run: >
        dotnet test ${{ env.TEST_PROJECT }} -c Release --no-build
        --collect:"XPlat Code Coverage"
        --logger "trx;LogFileName=test-results.trx"

    - name: Publicar resultados de test en el Summary
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: .NET Tests
        path: '**/test-results.trx'
        reporter: dotnet-trx
        fail-on-error: 'false'

    - name: Generar versión semántica simple
      id: meta
      run: |
        echo "version=0.1.${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT

    - name: Publis
